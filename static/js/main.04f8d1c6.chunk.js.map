{"version":3,"sources":["App.js","index.js"],"names":["App","useState","session","setSession","rest","setRest","start","setStart","pause","setPause","over","setOver","minutes","seconds","sessionTimer","setSessionTimer","restTimer","setRestTimer","useEffect","timerId","setInterval","breakTick","clearInterval","Tick","content","style","color","className","toString","padStart","onClick","window","location","reload","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04f8d1c6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst App = () => {\n  const [session, setSession] = useState(25);\n  const [rest, setRest] = useState(5);\n  const [start, setStart] = useState(false);\n  const [pause, setPause] = useState(false);\n  const [over, setOver] = useState(false);\n  const [sessionTimer, setSessionTimer] = useState({\n    minutes: session,\n    seconds: 0,\n  });\n  const [restTimer, setRestTimer] = useState({\n    minutes: rest,\n    seconds: 0,\n  });\n\n  //Component did update to rerender when ever session or break is changed\n  useEffect(() => {\n    setSessionTimer({ minutes: session, seconds: 0 });\n  }, [session]);\n\n  useEffect(() => {\n    setRestTimer({ minutes: rest, seconds: 0 });\n  }, [rest]);\n\n  //Session Timer function\n  const Tick = () => {\n    if (!start || pause) return false;\n    if (sessionTimer.minutes === 0 && sessionTimer.seconds === 0) {\n      setOver(true);\n    } else if (sessionTimer.seconds === 0) {\n      setSessionTimer({\n        minutes: sessionTimer.minutes - 1,\n        seconds: 59,\n      });\n      setRestTimer({\n        minutes: rest,\n        seconds: 0,\n      });\n    } else if (sessionTimer.minutes >= 0) {\n      setSessionTimer({\n        minutes: sessionTimer.minutes,\n        seconds: sessionTimer.seconds - 1,\n      });\n    }\n  };\n\n  //Break Timer function\n  const breakTick = () => {\n    if (!start || pause) return false;\n    if (restTimer.minutes === 0 && restTimer.seconds === 0) {\n      setOver(false);\n    } else if (restTimer.seconds === 0) {\n      setRestTimer({\n        minutes: restTimer.minutes - 1,\n        seconds: 59,\n      });\n      setSessionTimer({\n        minutes: session,\n        seconds: 0,\n      });\n    } else if (restTimer.minutes >= 0) {\n      setRestTimer({\n        minutes: restTimer.minutes,\n        seconds: restTimer.seconds - 1,\n      });\n    }\n  };\n\n  //Where the countdown magic actually happens. With the power of set interval. Runs either the session or the break function based on the over flag\n  useEffect(() => {\n    if (over) {\n      let timerId = setInterval(() => breakTick(), 1000);\n\n      return () => {\n        return clearInterval(timerId);\n      };\n    } else {\n      let timerId = setInterval(() => Tick(), 1000);\n\n      return () => {\n        return clearInterval(timerId);\n      };\n    }\n  });\n\n  //Increment and decrement buttons for the session and break states\n  const incrementSession = () => {\n    setSession(session + 1);\n  };\n\n  const decrementSession = () => {\n    if (session > 1) {\n      setSession(session - 1);\n    }\n  };\n  const incrementBreak = () => {\n    setRest(rest + 1);\n  };\n\n  const decrementBreak = () => {\n    if (rest > 1) {\n      setRest(rest - 1);\n    }\n  };\n\n  //Reset function which reloads the page\n  const handleReset = () => {\n    window.location.reload();\n  };\n\n  //Content which shows either the session or break countdown based on the over flag\n  let content = !over ? (\n    <div>\n      <h1 className=\"session-length-title\">Session</h1>\n      {`${sessionTimer.minutes\n        .toString()\n        .padStart(2, 0)}:${sessionTimer.seconds.toString().padStart(2, 0)}`}\n    </div>\n  ) : (\n    <div style={{ color: \"red\" }}>\n      <h1 className=\"session-length-title\">Break</h1>\n      {`${restTimer.minutes\n        .toString()\n        .padStart(2, 0)}:${restTimer.seconds.toString().padStart(2, 0)}`}\n    </div>\n  );\n\n  return (\n    <div className=\"ui container main-container\">\n      <h1 className=\"title\">25 + 5 Clock</h1>\n      <div className=\"length-controls\">\n        <div className=\"session\">\n          <h2>Session Length</h2>\n          <i className=\"fas fa-arrow-up\" onClick={incrementSession} />\n          <span className=\"length\">{session}</span>\n          <i className=\"fas fa-arrow-down\" onClick={decrementSession} />\n        </div>\n        <div className=\"break\">\n          <h2>Break Length</h2>\n          <i className=\"fas fa-arrow-up\" onClick={incrementBreak} />\n          <span className=\"length\">{rest}</span>\n          <i className=\"fas fa-arrow-down\" onClick={decrementBreak} />\n        </div>\n      </div>\n      <div className=\"countdown-section\">\n        <div className=\"session-length\">{content}</div>\n        <div className=\"controls\">\n          <i className=\"fas fa-play\" onClick={() => setStart(true)}></i>\n          <i className=\"fas fa-pause\" onClick={() => setPause(!pause)}></i>\n          <i className=\"fas fa-sync-alt\" onClick={handleReset}></i>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}